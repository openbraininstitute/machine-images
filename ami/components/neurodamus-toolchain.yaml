---
name: neurodamus-toolchain
description: Install toolchain for neurodamus
schemaVersion: 1.0
parameters:
  - NeurodamusVersion:
      type: string
      default: "3.11.0"
      description: Version of Neurodamus to install
  - LibsonataReportVersion:
      type: string
      default: "1.2.7"
      description: Version of Libsonatareport to install
  - NeuronCommitID:
      type: string
      default: "9.0.0"
      description: Commit ID or version of Neuron to install
  - LibsonataVersion:
      type: string
      default: "v0.1.31"
      description: Version of Libsonatareport to install
  - NeurodamusModelsVersion:
      type: string
      default: "2.4.2"
      description: Version of Neurodamus-models to install
phases:
  - name: build
    steps:
      - name: EFA-and-OpenMPI
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -euo pipefail
              set -x
              echo "Start openbraininstitute step: EFA-and-OpenMPI"
              dnf -y install bison cpp cmake gcc-c++ flex git libfl-devel python3.11-devel python3-pip python-devel python3-virtualenv readline-devel ninja-build
              cd /tmp
              curl -O https://efa-installer.amazonaws.com/aws-efa-installer-latest.tar.gz
              tar xf aws-efa-installer-latest.tar.gz
              cd aws-efa-installer
              ./efa_installer.sh -y --skip-kmod --mpi=openmpi5
              cd -
              rm -rf /tmp/aws*
              echo "End openbraininstitute step: EFA-and-OpenMPI"
      - name: HDF5
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: HDF5"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              set -euo pipefail
              export CC=$(which mpicc)
              export CXX=$(which mpic++)
              mkdir hdf5
              cd hdf5
              curl -O https://support.hdfgroup.org/releases/hdf5/v1_14/v1_14_6/downloads/hdf5-1.14.6.tar.gz
              tar xf hdf5-1.14.6.tar.gz
              cd hdf5-1.14.6
              set +e
              ./configure --enable-parallel --enable-shared --prefix=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install
              if [ $? -ne 0 ]; then cat config.log; exit 1; fi
              set -e
              make -j
              make install
              cd ..
              rm -rf hdf5*
              echo "End openbraininstitute step: HDF5"
      - name: neurodamus_venv
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neurodamus_venv"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              cd /opt/circuit_simulation
              python3.11 -m venv neurodamus_venv
              source neurodamus_venv/bin/activate
              pip install --upgrade pip
              pip install --upgrade setuptools
              pip install --upgrade cython jinja2 numpy pkgconfig pytest pyyaml sympy wheel
              echo "End openbraininstitute step: neurodamus_venv"
      - name: libSONATA
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: libSONATA"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              export CC=$(which mpicc)
              export CXX=$(which mpic++)
              set -euo pipefail
              pip install git+https://github.com/openbraininstitute/libsonata@{{ LibsonataVersion }}
              echo "End openbraininstitute step: libSONATA"
      - name: libsonata-report
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: libSONATA"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              export CC=$(which mpicc)
              export CXX=$(which mpic++)
              set -euo pipefail
              git clone https://github.com/openbraininstitute/libsonatareport.git --recursive --depth 1 -b {{ LibsonataReportVersion }}
              cmake -B libsonatareport/rep_build -S libsonatareport -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install -DCMAKE_BUILD_TYPE=Release -DSONATA_REPORT_ENABLE_SUBMODULES=ON -DSONATA_REPORT_ENABLE_MPI=ON
              cmake --build libsonatareport/rep_build --parallel
              cmake --install libsonatareport/rep_build
              rm -rf libsonatareport
              echo "End openbraininstitute step: libsonata-report"
      - name: neuron
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neuron"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              git clone https://github.com/neuronsimulator/nrn.git nrn
              cd nrn
              git checkout {{ NeuronCommitID }}
              cd ..
              cmake -B nrn/nrn_build -S nrn --debug-output -G Ninja -DPYTHON_EXECUTABLE=$(which python) -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install \
              -DNRN_ENABLE_MPI=ON -DNRN_ENABLE_INTERVIEWS=OFF -DNRN_ENABLE_RX3D=OFF -DNRN_ENABLE_CORENEURON=ON -DCMAKE_C_COMPILER=gcc \
              -DCMAKE_CXX_COMPILER=g++ -DCORENRN_ENABLE_REPORTING=ON -DCMAKE_PREFIX_PATH=$SONATAREP_INSTALL_DIR
              cmake --build nrn/nrn_build --parallel
              cmake --build nrn/nrn_build --target install
              rm -rf nrn
              echo "End openbraininstitute step: neuron"
      - name: h5py
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: h5py"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              pip install mpi4py
              export CC=$(which mpicc)
              export CXX=$(which mpicxx)
              export HDF5_MPI="ON"
              export HDF5_INCLUDEDIR=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/include
              export HDF5_LIBDIR=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib
              pip install --no-cache-dir --no-binary=h5py h5py --no-build-isolation
              echo "End openbraininstitute step: h5py"
      - name: neurodamus
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neurodamus"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export PATH=/opt/circuit_simulation/neurodamus_venv/bin:$PATH
              set -euo pipefail
              echo "openbraininstitute: current working directory"
              pwd
              git clone https://github.com/openbraininstitute/neurodamus.git -b {{ NeurodamusVersion }} --depth 1
              cd neurodamus
              pip install .
              cd -
              echo "End openbraininstitute step: neurodamus"
      - name: neurodamus-neocortex
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neurodamus-neocortex"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/neurodamus_venv/bin:$PATH
              export PATH=/opt/circuit_simulation/obi_install/bin:$PATH
              export PYTHONPATH=/opt/circuit_simulation/obi_install/lib/python:$PYTHONPATH
              export CC=$(which mpicc)
              export CXX=$(which mpicxx)
              set -euo pipefail
              echo "openbraininstitute: current working directory"
              git clone --branch={{ NeurodamusModelsVersion }} https://github.com/openbraininstitute/neurodamus-models.git --depth 1
              export DATADIR=$(python -c "import neurodamus; from pathlib import Path; print(Path(neurodamus.__file__).parent / 'data')")
              cmake -B neurodamus-models/build -S neurodamus-models -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON -DCMAKE_PREFIX_PATH=${SONATAREP_INSTALL_DIR} -DNEURODAMUS_CORE_DIR=${DATADIR} -DNEURODAMUS_MECHANISMS=neocortex -DNEURODAMUS_NCX_V5=ON
              cmake --build neurodamus-models/build
              cmake --install neurodamus-models/build
              echo "End openbraininstitute step: neurodamus-neocortex"
      - name: hpctoolkit
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: hpctoolkit for CPU profiling"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export MPICC=$(which mpicc)
              export MPICXX=$(which mpic++)
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              set -euo pipefail
              git clone https://gitlab.com/hpctoolkit/hpctoolkit.git --recursive --depth 1
              # v4.11.3 was the latest at the time of writing, no other reason
              git clone https://github.com/ccache/ccache -b v4.11.3 --recursive --depth 1
              mkdir ccache/build
              pushd ccache/build
              cmake -D CMAKE_BUILD_TYPE=Release ..
              make
              make install
              popd
              dnf -y install boost-devel bzip2-devel tbb-devel elfutils-devel xerces-c-devel binutils-devel yaml-cpp-devel libpfm-devel libunwind-devel xxhash-devel zlib-devel
              pip install meson
              cd hpctoolkit
              meson setup builddir -Dhpcprof_mpi=enabled
              cd builddir
              meson compile
              # meson test
              meson devenv hpcrun --version
              echo "End openbraininstitute step: hpctoolkit for CPU profiling"
      - name: memray
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: memray for memray profiling"
              export HOME=/root
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              set -euo pipefail
              pip install memray
              echo "End openbraininstitute step: memray for memray profiling"
      - name: darshan
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              cd /opt/circuit_simulation
              echo "Start openbraininstitute step: darshan-runtime for parallel I/O profiling"
              curl -O https://web.cels.anl.gov/projects/darshan/releases/darshan-3.4.7.tar.gz
              tar xf darshan-3.4.7.tar.gz
              cd darshan-3.4.7
              ./prepare.sh
              pushd darshan-runtime
              ./configure --with-log-path=/opt/circuit_simulation/darshan/darshan-logs --prefix=/opt/circuit_simulation/darshan/darshan-runtime --with-jobid-env=SLURM_JOBID CC=mpicc --enable-hdf5-mod
              popd
              echo "Start openbraininstitute step: darshan-utils for parallel I/O profiling"
              dnf -y install perl-Pod-Parser gnuplot
              pushd darshan-util
              ./configure --prefix=/opt/circuit_simulation/darshan/darshan-util
              make
              make install
              popd
              rm /opt/circuit_simulation/darshan-3.4.7.tar.gz
              echo "End openbraininstitute step: darshan for parallel I/O profiling"
  - name: Test
    steps:
      - name: TestNeurodamus
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "openbraininstitute: testing Neurodamus"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/obi_install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              cd /opt/circuit_simulation
              source neurodamus_venv/bin/activate
              export NEURODAMUS_NEOCORTEX_ROOT=/opt/circuit_simulation/obi_install
              export NEURODAMUS_PYTHON=$(python -c "import neurodamus; from pathlib import Path; print(Path(neurodamus.__file__).parent / 'data')")
              export HOC_LIBRARY_PATH=${NEURODAMUS_NEOCORTEX_ROOT}/share/neurodamus_neocortex/hoc
              export CORENEURONLIB=${NEURODAMUS_NEOCORTEX_ROOT}/lib/libcorenrnmech.so
              export NRNMECH_LIB_PATH=${NEURODAMUS_NEOCORTEX_ROOT}/lib/libnrnmech.so
              cd /opt/circuit_simulation/neurodamus/tests/simulations/usecase3/
              special -python $NEURODAMUS_PYTHON/init.py --configFile=simulation_sonata_coreneuron.json
