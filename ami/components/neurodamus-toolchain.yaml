---
name: neurodamus-toolchain
description: Install toolchain for neurodamus
schemaVersion: 1.0
phases:
  - name: build
    steps:
      - name: EFA-and-OpenMPI
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -euo pipefail
              set -x
              echo "Start openbraininstitute step: EFA-and-OpenMPI"
              dnf -y install bison cpp cmake gcc-c++ flex git libfl-devel python3.11-devel python3-pip python-devel python3-virtualenv readline-devel ninja-build
              cd /tmp
              curl -O https://efa-installer.amazonaws.com/aws-efa-installer-latest.tar.gz
              tar xf aws-efa-installer-latest.tar.gz
              cd aws-efa-installer
              ./efa_installer.sh -y --skip-kmod --mpi=openmpi5
              cd -
              rm -rf /tmp/aws*
              echo "End openbraininstitute step: EFA-and-OpenMPI"
      - name: HDF5
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: HDF5"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              set -euo pipefail
              export CC=$(which mpicc)
              export CXX=$(which mpic++)
              mkdir hdf5
              cd hdf5
              curl -O https://support.hdfgroup.org/releases/hdf5/v1_14/v1_14_6/downloads/hdf5-1.14.6.tar.gz
              tar xf hdf5-1.14.6.tar.gz
              cd hdf5-1.14.6
              set +e
              ./configure --enable-parallel --enable-shared --prefix=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install
              if [ $? -ne 0 ]; then cat config.log; exit 1; fi
              set -e
              make -j
              make install
              cd ..
              rm -rf hdf5*
              echo "End openbraininstitute step: HDF5"
      - name: neurodamus_venv
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neurodamus_venv"
              export HOME=/root
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              python3.11 -m venv neurodamus_venv
              source neurodamus_venv/bin/activate
              pip install --upgrade pip
              pip install --upgrade setuptools
              pip install --upgrade cython jinja2 numpy pkgconfig pytest pyyaml sympy wheel
              echo "End openbraininstitute step: neurodamus_venv"
      - name: libSONATA
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: libSONATA"
              export HOME=/root
              source neurodamus_venv/bin/activate
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              export CC=$(which mpicc)
              export CXX=$(which mpic++)
              set -euo pipefail
              pip install git+https://github.com/openbraininstitute/libsonata@master
              git clone https://github.com/openbraininstitute/libsonatareport.git --recursive --depth 1 -b master
              cmake -B libsonatareport/rep_build -S libsonatareport -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install -DCMAKE_BUILD_TYPE=Release -DSONATA_REPORT_ENABLE_SUBMODULES=ON -DSONATA_REPORT_ENABLE_MPI=ON
              cmake --build libsonatareport/rep_build --parallel
              cmake --install libsonatareport/rep_build
              rm -rf libsonatareport
              echo "End openbraininstitute step: libSONATA"
      - name: neuron
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neuron"
              export HOME=/root
              source neurodamus_venv/bin/activate
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              git clone https://github.com/neuronsimulator/nrn.git nrn
              cd nrn
              git checkout c48d7d5
              cd ..
              cmake -B nrn/nrn_build -S nrn --debug-output -G Ninja -DPYTHON_EXECUTABLE=$(which python) -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install \
              -DNRN_ENABLE_MPI=ON -DNRN_ENABLE_INTERVIEWS=OFF -DNRN_ENABLE_RX3D=OFF -DNRN_ENABLE_CORENEURON=ON -DCMAKE_C_COMPILER=gcc \
              -DCMAKE_CXX_COMPILER=g++ -DCORENRN_ENABLE_REPORTING=ON -DCMAKE_PREFIX_PATH=$SONATAREP_INSTALL_DIR
              cmake --build nrn/nrn_build --parallel
              cmake --build nrn/nrn_build --target install
              rm -rf nrn
              echo "End openbraininstitute step: neuron"
      - name: h5py
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: h5py"
              export HOME=/root
              source neurodamus_venv/bin/activate
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              set -euo pipefail
              pip install mpi4py
              export CC=$(which mpicc)
              export CXX=$(which mpicxx)
              export HDF5_MPI="ON"
              export HDF5_INCLUDEDIR=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/include
              export HDF5_LIBDIR=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib
              pip install --no-cache-dir --no-binary=h5py h5py --no-build-isolation
              echo "End openbraininstitute step: h5py"
      - name: neurodamus
        action: ExecuteBash
        inputs:
          commands:
            - |-
              #!/bin/bash
              set -x
              echo "Start openbraininstitute step: neurodamus"
              export HOME=/root
              source neurodamus_venv/bin/activate
              export SONATAREP_INSTALL_DIR=/opt/circuit_simulation/obi_install
              export PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/bin:$PATH
              export LD_LIBRARY_PATH=/opt/amazon/openmpi5/lib64:${LD_LIBRARY_PATH}
              export LD_LIBRARY_PATH=/opt/circuit_simulation/hdf5/hdf5-1.14.6/install/lib:$LD_LIBRARY_PATH
              export HOC_LIBRARY_PATH="/opt/circuit_simulation/neurodamus/neurodamus/data/hoc"
              export NEURODAMUS_MODS_DIR="/opt/circuit_simulation/neurodamus/neurodamus/data/mod"
              export PATH=/opt/amazon/openmpi5/bin:${PATH}
              export PATH=/opt/circuit_simulation/neurodamus_venv/bin:$PATH
              export PATH=/opt/circuit_simulation/obi_install/bin:$PATH
              export PYTHONPATH=/opt/circuit_simulation/obi_install/lib/python:$PYTHONPATH
              export CC=$(which mpicc)
              export CXX=$(which mpicxx)
              set -euo pipefail
              pwd
              git clone https://github.com/openbraininstitute/neurodamus.git
              cd neurodamus
              pip install .
              cd -
              mkdir -p ${HOC_LIBRARY_PATH}
              export NEURODAMUS_PYTHON="/opt/circuit_simulation/neurodamus/neurodamus/data"
              wget -q https://raw.githubusercontent.com/openbraininstitute/neurodamus-models/refs/heads/main/common/hoc/AMPANMDAHelper.hoc -O $HOC_LIBRARY_PATH/AMPANMDAHelper.hoc
              wget -q https://raw.githubusercontent.com/openbraininstitute/neurodamus-models/refs/heads/main/common/hoc/GABAABHelper.hoc -O $HOC_LIBRARY_PATH/GABAABHelper.hoc
              wget -q https://raw.githubusercontent.com/openbraininstitute/neurodamus-models/refs/heads/main/common/mod/ProbAMPANMDA_EMS.mod -O $NEURODAMUS_MODS_DIR/ProbAMPANMDA_EMS.mod
              wget -q https://raw.githubusercontent.com/openbraininstitute/neurodamus-models/refs/heads/main/common/mod/ProbGABAAB_EMS.mod -O $NEURODAMUS_MODS_DIR/ProbGABAAB_EMS.mod
              git clone --branch=main https://github.com/openbraininstitute/neurodamus-models.git
              export DATADIR=/opt/circuit_simulation/neurodamus/neurodamus/data
              cmake -B neurodamus-models/build -S neurodamus-models -DCMAKE_INSTALL_PREFIX=/opt/circuit_simulation/obi_install -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON -DCMAKE_PREFIX_PATH=${SONATAREP_INSTALL_DIR} -DNEURODAMUS_CORE_DIR=${DATADIR} -DNEURODAMUS_MECHANISMS=neocortex -DNEURODAMUS_NCX_V5=ON
              cmake --build neurodamus-models/build
              cmake --install neurodamus-models/build
              echo "End openbraininstitute step: neurodamus"
